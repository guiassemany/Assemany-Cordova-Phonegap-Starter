'use strict';

var acs = angular.module('AssemanyCordovaStarter', [
      'ngTouch',
      'ngAnimate',
      'ngCordova',
      'ngResource',
      'ngMaterial',
      'ngMdIcons',
      'pascalprecht.translate',
      'ui.router'
]);

    angular.module('AssemanyCordovaStarter')
    .config(["$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {

    // For any unmatched url, redirect to /tabs while there is no dashboard page
    $urlRouterProvider.otherwise("/tabs");

    // Now set up the states
    $stateProvider
      .state('dashboard', {
      url: "/dashboard",
      templateUrl: "webapp/views/dashboard.html",
      controller: 'DashboardCtrl',
      controllerAs: 'dashboard'
      })
      .state('tabs', {
        url: "/tabs",
        templateUrl: "webapp/views/tabs.html",
        controller: 'TabsCtrl',
        controllerAs: 'tabs'
      })
      .state('api', {
        url: "/api",
        templateUrl: "webapp/views/api.html",
        controller: 'ApiCtrl',
        controllerAs: 'api'
      })
      .state('apiPosts', {
        url: "/api/posts",
        templateUrl: "webapp/views/posts.html",
        controller: 'PostsCtrl',
        controllerAs: 'posts'
      })
      .state('apiCars', {
        url: "/api/cars",
        templateUrl: "webapp/views/cars.html",
        controller: 'CarsCtrl',
        controllerAs: 'cars'
      })
      .state('apiShowCar', {
        url: "/api/car/:carId",
        templateUrl: "webapp/views/car-detail.html",
        controller: 'CarCtrl',
        controllerAs: 'car'
      })
      .state('dialogs', {
        url: "/dialogs",
        templateUrl: "webapp/views/dialogs.html",
        controller: 'dialogsCtrl',
        controllerAs: 'dialogs'
      })
      .state('cards', {
        url: "/cards",
        templateUrl: "webapp/views/cards.html",
        controller: 'CardsCtrl',
        controllerAs: 'cards'
      })
      .state('camera', {
        url: "/plugins/camera",
        templateUrl: "webapp/views/plugins/picture.html",
        controller: 'PictureCtrl',
        controllerAs: 'picture'
      })
      .state('deviceInfo', {
        url: "/plugins/deviceInfo",
        templateUrl: "webapp/views/plugins/deviceInfo.html",
        controller: 'DeviceInfoCtrl',
        controllerAs: 'device'
      })
      .state('login', {
        url: "/auth/login",
        templateUrl: "webapp/views/auth/login.html",
        controller: 'LoginCtrl',
        controllerAs: 'login'
      });
    }])
    .config(["$mdThemingProvider", function($mdThemingProvider) {
      $mdThemingProvider.theme('default')
        .primaryPalette('green')
        .accentPalette('amber').dark();
    }])
    .config(["$compileProvider", function ($compileProvider){
        $compileProvider.aHrefSanitizationWhitelist(/^\s*(https?|http|ftp|mailto|file|tel):/);
    }])
    .config(["$translateProvider", function($translateProvider) {

      $translateProvider.preferredLanguage('en');
      $translateProvider.useSanitizeValueStrategy('escape');
      $translateProvider.useStaticFilesLoader({
        prefix: 'webapp/languages/',
        suffix: '.json'
      });

    }]);

acs.controller('ApiCtrl', [ 'UtilService', function(UtilService) {

  var vm = this;

  vm.util = UtilService;

}]);

acs.controller('AppCtrl', ['$mdSidenav', '$timeout','$log', '$location', '$translate', '$filter', '$state', function($mdSidenav, $timeout, $log, $location, $translate, $filter, $state) {

            var vm = this;

            vm.itensMenu = [
              {
                  nome: 'DASHBOARD',
                  icone: 'dashboard',
                  //iconeCor: 'pink',
                  state: 'dashboard'
              },
              {
                  nome: 'TABS',
                  icone: 'tab',
                  //iconeCor: 'red',
                  state: 'tabs'
              },
              {
                  nome: 'RESTFUL_TEST',
                  icone: 'sync',
                  //iconeCor: 'pink',
                  state: 'api'
              },
              {
                  nome: 'DIALOGS',
                  icone: 'chat',
                  //iconeCor: 'pink',
                  state: 'dialogs'
              },
              {
                  nome: 'CARDS',
                  icone: 'view_stream',
                  //iconeCor: 'pink',
                  state: 'cards'
              },
              {
                  nome: 'CAMERA',
                  icone: 'camera',
                  //iconeCor: 'pink',
                  state: 'camera'
              },
              {
                  nome: 'DEVICE_INFO',
                  icone: 'perm_device_info',
                  //iconeCor: 'pink',
                  state: 'deviceInfo'
              }
            ];

            vm.selected = null;

            vm.toggleMenu = function (name) {
              $mdSidenav(name).toggle();
            }

            vm.selectItem = function(itemState) {
              vm.selected = angular.isNumber(itemState) ? vm.itensMenu[itemState.index] : itemState;
              $state.go(itemState);
              vm.toggleMenu('left');
            }

            vm.changeLanguage = function(langKey) {
              $translate.use(langKey);
            };

}]);

acs.controller('CarCtrl', [ 'CarService', 'UtilService','$location', '$stateParams', function(CarService, UtilService,$location, $stateParams) {
  // A simple controller that fetches a list of data from a service
  // "Cars" is a service returning mock data (CarService.js)
  var vm = this;

  vm.car = {};
  vm.carId = $stateParams.carId;
  vm.util = UtilService;

  function getCar(carId)
  {
      vm.car = CarService.get(carId);
  };

  getCar(vm.carId);

}]);

acs.controller('CardsCtrl', ['$mdDialog', function($mdDialog) {
  var vm = this;
  vm.allCards = [
    {
      "title": "Fiscolas",
      "text": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus malesuada aliquam ante, sit amet commodo mi iaculis et. Morbi sed lectus lectus."
    },
    {
      "title": "Fiscolandia",
      "text": "Proin dictum, augue non egestas placerat, turpis odio convallis quam, at feugiat orci nulla venenatis mauris. Nullam condimentum auctor odio nec venenatis. Cras placerat ligula nec ipsum consectetur ullamcorper. Vivamus a eros volutpat, pretium nunc semper, ornare nunc. Aenean vulputate enim nisl, in euismod nibh euismod id. Nullam pulvinar erat nec nisl iaculis molestie. Praesent a felis auctor, facilisis risus in, vestibulum tortor. Suspendisse volutpat, erat ut hendrerit sodales, arcu lectus rutrum nisi, vitae posuere arcu enim mattis eros."
    },
    {
      "title": "FiscoNunes",
      "text": "Proin dictum, augue non egestas placerat, turpis odio convallis quam, at feugiat orci nulla venenatis mauris. Nullam condimentum auctor odio nec venenatis. Cras placerat ligula nec ipsum consectetur ullamcorper. Vivamus a eros volutpat, pretium nunc semper, ornare nunc. Aenean vulputate enim nisl, in euismod nibh euismod id. Nullam pulvinar erat nec nisl iaculis molestie. Praesent a felis auctor, facilisis risus in, vestibulum tortor. Suspendisse volutpat, erat ut hendrerit sodales, arcu lectus rutrum nisi, vitae posuere arcu enim mattis eros."
    },
    {
      "title": "Fiscolangelo",
      "text": "Proin dictum, augue non egestas placerat, turpis odio convallis quam, at feugiat orci nulla venenatis mauris. Nullam condimentum auctor odio nec venenatis. Cras placerat ligula nec ipsum consectetur ullamcorper. Vivamus a eros volutpat, pretium nunc semper, ornare nunc. Aenean vulputate enim nisl, in euismod nibh euismod id. Nullam pulvinar erat nec nisl iaculis molestie. Praesent a felis auctor, facilisis risus in, vestibulum tortor. Suspendisse volutpat, erat ut hendrerit sodales, arcu lectus rutrum nisi, vitae posuere arcu enim mattis eros."
    }
  ];

  var originatorEv;

    vm.openMenu = function($mdOpenMenu, ev) {
      originatorEv = ev;
      $mdOpenMenu(ev);
    };

    vm.addCard = function(card){
        vm.allCards.push(card);
        vm.newCard = null;
      }

    vm.edit = function() {
      $mdDialog.show(
        $mdDialog.alert()
          .targetEvent(originatorEv)
          .clickOutsideToClose(true)
          .parent('body')
          .title('You clicked the edit button!')
          .content('Thats just an example of how easy it is to define actions on ng-click.')
          .ok('Awesome!')
      );

      originatorEv = null;
    };

    vm.delete = function(card){
      var index = vm.allCards.indexOf(card);
      vm.allCards.splice(index, 1);
    };

  //console.log(vm.allCards);

}]);

acs.controller('CarsCtrl', [ 'CarService', 'UtilService', '$location', '$state', function(CarService, UtilService, $location, $state) {
  // A simple controller that fetches a list of data from a service
  // "Cars" is a service returning mock data (CarService.js)
  var vm = this;

  vm.cars = [];

  vm.util = UtilService;

  vm.getCars = function(){
      vm.cars = CarService.all();
  };

  vm.getDetail = function(id){
    $state.go('apiShowCar', { carId: id });
  }
}]);

acs.controller('DashboardCtrl', ["$scope", "$mdSidenav", "$mdUtil", function ($scope,$mdSidenav,$mdUtil) {

}]);

acs.controller('DeviceInfoCtrl', ['$cordovaDevice', function($cordovaDevice) {

  var vm = this;

  document.addEventListener("deviceready", function () {

     vm.device = $cordovaDevice.getDevice();
     vm.cordova = $cordovaDevice.getCordova();
     vm.model = $cordovaDevice.getModel();
     vm.platform = $cordovaDevice.getPlatform();
     vm.uuid = $cordovaDevice.getUUID();
     vm.version = $cordovaDevice.getVersion();

  }, false);

}]);

acs.controller('PictureCtrl', [ '$cordovaCamera', function($cordovaCamera) {

  var vm = this;

  vm.takePicture = function() {
    var options = {
      quality: 100,
      destinationType: Camera.DestinationType.FILE_URI,
      sourceType: Camera.PictureSourceType.CAMERA,
      allowEdit: false,
      encodingType: Camera.EncodingType.JPEG,
      //targetWidth: 300,
      //targetHeight: 300,
      popoverOptions: CameraPopoverOptions,
      saveToPhotoAlbum: false
    };

    $cordovaCamera.getPicture(options).then(function(imageData) {
      var image = document.getElementById('myImage');
      image.src = imageData;
    }, function(err) {
      // error
    });
  }

  vm.cleanPicture = function() {
    var image = document.getElementById('myImage');
    image.src = 'img/no-picture.png';
  }

}]);

acs.controller('PostsCtrl', [ 'Post', 'UtilService', function(Post, UtilService) {

  var vm = this;

  vm.posts = [];

  vm.util = UtilService;

  Post.query(function(data) {
    vm.posts = data;
  });
  //console.log($scope.posts);

}]);

acs.controller('TabsCtrl', ["$scope", "$mdSidenav", "$mdUtil", function ($scope,$mdSidenav,$mdUtil) {

}]);

acs.controller('dialogsCtrl', ['$mdDialog', '$filter', function($mdDialog, $filter) {

  var vm = this;

  vm.status = ' ';

  vm.showAlert = function(ev) {
    $mdDialog.show(
      $mdDialog.alert()
        .parent(angular.element(document.querySelector('#popupContainer')))
        .clickOutsideToClose(true)
        .title($filter('translate')('MESSAGE'))
        .content('Texto do alerta aqui.')
        .ariaLabel('Demonstração de alerta')
        .ok('Entendi!')
        .targetEvent(ev)
    );
  };

  vm.showConfirm = function(ev) {
    // Appending dialog to document.body to cover sidenav in docs app
    var confirm = $mdDialog.confirm()
          .title($filter('translate')('MESSAGE'))
          .content('Escolha uma das opções.')
          .ariaLabel('Teste')
          .ok('Sim!')
          .cancel('Não')
          .targetEvent(ev);
    $mdDialog.show(confirm).then(function() {

      vm.status = 'Você clicou em sim.';

    }, function() {

      vm.status = 'Você clicou em não.';

    });
  };

}]);

acs.factory('CarService', function() {
  // Might use a resource here that returns a JSON array
  // I'll do it later =)
  // Some fake testing data
  var cars = [
    {
      id: 0,
      title: 'Ferrari',
      description: 'Ferrari S.p.A. is an Italian luxury sports car manufacturer based in Maranello. Founded by Enzo Ferrari in 1929, as Scuderia Ferrari, the company sponsored drivers and manufactured race cars before moving into production of street-legal vehicles in 1947. Fiat acquired 50% of Ferrari in 1969 and expanded its stake to 90% in 1988. Ferrari is the worlds most powerful brand according to Brand Finance. In May 2012 the 1962 Ferrari 250 GTO became the most expensive car in history, selling in a private transaction for $38,115,000 to American communications magnate Craig McCaw. In 2014 Fiat announced its intentions to sell a portion of its share in Ferrari; as of the announcement Fiat owned 90% of Ferrari.',
      mainImage: 'http://pictures.topspeed.com/IMG/crop/201303/2014-ferrari-laferrari-5_600x0w.jpg',
      images:[
        {
          title: 'Ferrari Image One',
          url:  'http://car-pictures.cars.com/images/?IMG=USC30FRC151A021001.png&WIDTH=624&HEIGHT=300&AUTOTRIM=1'
        },
        {
          title: 'Ferrari Image Two',
          url:  'http://488gtb.ferrari.com/img/carHome.png'
        },
        {
          title: 'Ferrari Image Three',
          url:  'http://www.saopaolo.ferraridealers.com/siteasset/ferraridealer/4f74a1a219b2b/961/420/selected/-216/0/0/4f74a1a219b2b.jpg'
        }
      ],
      facts: [
        {
          title: 'Ferrari Curiosity One',
          text: 'Text'
        },
        {
          title: 'Ferrari Curiosity Two',
          text: 'Text'
        },
        {
          title: 'Ferrari Curiosity Three',
          text: 'Text'
        }
      ]
    },
    {
      id: 1,
      title: 'Lamborghini Veneno',
      description: 'The Lamborghini Veneno is consistently focused on optimum aerodynamics and cornering stability, giving the Veneno the real dynamic experience of a racing prototype, yet it is fully homologated for the road.',
      mainImage: 'http://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2014/07/03/101811462-163099673.530x298.jpg?v=1404403550',
      images:[
        {
          title: 'Image One',
          url:  'https://s.yimg.com/bt/api/res/1.2/zDeX02CsjsBzmpYUvSQkSw--/YXBwaWQ9eW5ld3NfbGVnbztmaT1pbnNldDtoPTM4NTtpbD1wbGFuZTtxPTc1O3c9NjMw/http://l.yimg.com/os/publish-images/finance/2013-12-26/c0db089e-f656-4796-a71f-236461f982cb_Lamborghini-Veneno-Roadster.jpg'
        },
        {
          title: 'Image Two',
          url:  'http://www.autoguide.com/auto-news/wp-content/uploads/2013/03/Lamborghini-Veneno-awesome1.jpg'
        },
        {
          title: 'Image Three',
          url:  'http://autos.vocedeolhoemtudo.com.br/wp-content/gallery/lamborghini-veneno/lamborghini-veneno-11.jpg'
        }
      ],
      facts: [
        {
          title: 'Less Weight, More driving fun',
          text: 'The systematic, carbon-fiber, lightweight design is not only visible, it is also evident on the scales: With a power-to-weight ratio of 1.93 kg/hp (4,25 lbs/hp) and its forceful twelve-cylinder the Veneno guarantees a performance that is nothing short of mind-blowing.'
        },
        {
          title: 'High Tech Interior',
          text: 'Carbon fiber dominates the interior of the Veneno, too. The carbon fiber monocoque becomes visible inside the car in the area of the central tunnel and the sills. The two lightweight bucket seats are made from Lamborghini’s patented Forged Composite. The lightweight woven carbon-fiber CarbonSkin® is used to clad the entire cockpit, part of the seats and the headliner. These measures help reduce the weight and increase the driving fun.'
        },
        {
          title: 'Ready for any turn',
          text: 'Carbon fiber dominates the interior of the Veneno, too. The carbon fiber monocoque becomes visible inside the car in the area of the central tunnel and the sills. The two lightweight bucket seats are made from Lamborghini’s patented Forged Composite. The lightweight woven carbon-fiber CarbonSkin® is used to clad the entire cockpit, part of the seats and the headliner. These measures help reduce the weight and increase the driving fun.'
        }
      ]
    }
  ];

  return {
    all: function() {
      return cars;
    },
    get: function(carId) {
      return cars[carId];
    }
  }
});

acs.factory("Post", ["$resource", function($resource) {
  
  return $resource("http://jsonplaceholder.typicode.com/posts");

}]);

acs.factory('UtilService', [ '$location', function($location) {
  return {
    linkTo: function(view) {
      $location.path(view);
    }
  }
}]);

acs.service("testeService",["$q","$http", function ($q,$http) {



}]);

acs.controller('LoginCtrl', ['$filter', function ($filter) {

}]);
