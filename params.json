{"name":"Assemany Cordova/Phonegap Starter","tagline":"Quickstart your next Cordova/Phonegap app!","body":"# Assemany Cordova/Phonegap Starter\r\n\r\n\r\n## What is it?\r\n\r\nThis is a repo for a starter application featuring the acclaimed front-end framework AngularJS and the Cordova/Phonegap technology to make Hybrid Apps. Just clone this repo, install and you have a good foundation for building any application.\r\n\r\n#### Features:\r\n\r\n* Material Design - Angular Material (https://material.angularjs.org/)\r\n* Gulp Tasks to minify the app. (http://gulpjs.com/)\r\n* Translation Ready.\r\n\r\n#### Things Todo\r\n* Translate all sentences.\r\n* Improve performance.\r\n* Create a Dashboard page.\r\n* Create a Login Page.\r\n* Create more Restful Tests and improve the existing ones.\r\n* Create more examples with Device plugins.\r\n* Upload the image taken from camera to a server.\r\n* Create at least one example of every Angular Material Feature.\r\n* Improve Gulp Tasks.\r\n\r\n## How to install\r\n\r\nInstallation process is very simple.\r\n\r\nYou must have:\r\n* [node/npm](https://nodejs.org/en/download/),\r\n* [git](http://git-scm.org/),\r\n* Bower\r\n* Gulp.\r\n\r\nAnd I recommend installing Bower and Gulp globally: (If you already have these tools, running this command will update them.)\r\n\r\n```code\r\nnpm install -g bower\r\n```\r\n```code\r\nnpm install -g gulp\r\n```\r\n\r\n#### With these tools ready, go inside the project directory\r\n```code\r\ncd Assemany-Cordova-Phonegap-Starter (Or the directory you put the files in)\r\n```\r\nAnd run:\r\n```code\r\nnpm install\r\n```\r\nAnd after that\r\n```code\r\nbower install\r\n```\r\n\r\nAnd thats it. You can start developing you own app.\r\n\r\n\r\n## Basic Development Workflow\r\n\r\nOpen the terminal at project folder:\r\n\r\nRun: `gulp watch` - Read below for more information about this task.\r\n\r\nRun: `phonegap serve` or `cordova serve` to view the app on browser.\r\n\r\nIf you want to preview on your phone, read the section below.\r\n\r\nEdit/Create files as you normally would with your favorite editor/IDE.\r\n\r\nAll changes detected will trigger a specific gulp task to compile the necessary files for the app.\r\n\r\nIf previewing on browser, the browser will automatically reload after a change was made. This feature **will not** work with `cordova serve`. I will try to fix it later.\r\n\r\n\r\n\r\n## Device Preview\r\n\r\n\r\nMake sure to add the platform you wish, but before, check if its not already added.\r\n\r\nWith these commands you can verify which platforms are installed and available:\r\n* `phonegap platform ls` or `cordova platform ls`\r\n\r\n**Note: If you are on a windows machine, you can remove iOS platform by running `phonegap platform rm ios` or `cordova platform rm ios`**\r\n\r\nAnd then, if your device is plugged in your computer, with proper configurations(SDK, Debug Mode), running the commands bellow will install the app on your device.\r\n\r\nIf no device is found, then you will need to have an emulator for the desired platform.\r\n\r\n* `cordova run android`\r\n* `phonegap run android`\r\n* `cordova run ios`\r\n* `phonegap run ios`\r\n\r\nIn case you are using Phonegap, an alternative is to download the [Phonegap Developer App](http://app.phonegap.com/). It is a fast way to preview apps on your phone skipping all the needed configs.\r\n\r\n\r\n\r\n\r\n\r\n## Available Gulp Tasks\r\n\r\n\r\n### Gulp Watch\r\n```code\r\ngulp watch\r\n```\r\nThis command will watch for file changes at:\r\n* www/webapp/\\*\\*/*.js - If a file change here, it will automatically execute `gulp acs`\r\n* www/webapp/views/\\*\\*/*.html - If a file change here, it will automatically execute `gulp views`\r\n* www/lib/* - If a file change here, it will automatically execute `gulp vendors`\r\n\r\nIf any changes are detected, the respective task will be called.\r\n\r\n---\r\n\r\n### Gulp Build\r\n```code\r\ngulp build\r\n```\r\nThis task will run gulp acs and gulp views.\r\n\r\n---\r\n\r\n### Gulp Acs\r\n```code\r\ngulp acs\r\n```\r\n\r\nThis taks will compile all Javascript of the application (That can be found here -> 'www/webapp') into a single file called 'app.min.js' that will be located at 'www/js' folder.\r\nThats that only file we need to call on our index.html.\r\n\r\nIf you edit your js files, dont forget to run this task. Of course, if you are running **gulp watch**, the views will be automatically compiled when a change is detected.\r\n\r\n---\r\n\r\n### Gulp Views\r\n```code\r\ngulp views\r\n```\r\n\r\nThis task will compile the views into a single file called 'acs.tpls.min.js'. The application will look for this file when point to a view. In this case, we are using angular-template-cache to make things faster.\r\n\r\nIf you change your views, dont forget to run this task. Of course, if you are running **gulp watch**, the views will be automatically compiled when a change is detected.\r\n\r\n---\r\n\r\n\r\n### Gulp Vendors\r\n```code\r\ngulp vendors\r\n```\r\n\r\nThis task will compile all vendors js files into a single file called `vendors.min.js`. Thats the only file we need to call on our index.html to import all vendors files.\r\n\r\nTo include a new Vendor, read the FAQ Below.\r\n\r\n\r\n## FAQ\r\n\r\n### How do I add a new Vendor?\r\n\r\n* If possible, include it on you bower.json file then run `bower update` to download the vendor's files. If the vendor cannot be installed with bower, put the folder with the needed js file inside the `www/lib` directory.\r\n* Open the file `gulpfile.js` and add the path to the vendor js file on the vendors array\r\n```gulp\r\ngulp.task('vendors', function(){\r\ngulp.src([\r\n'www/lib/angular/angular.min.js',\r\n'www/lib/angular-aria/angular-aria.min.js',\r\n'....',\r\n'www/lib/Path_to_Your_new_vendor_js_file'\r\n])\r\n...\r\n```\r\n* Run `gulp vendors` to compile all the vendors into a single file called `vendors.min.js`. After compiled, this file can be found at `www/js/`.\r\n* The file `vendors.min.js` is already added to the index.html, so you dont have to worry about including it.\r\n\r\n### Why `npm install`?\r\n\r\nInstall these Dependencies on 'node_modules' folder\r\n\r\n* gulp\r\n* gulp-add-src\r\n* gulp-angular-templatecache\r\n* gulp-concat\r\n* gulp-jshint\r\n* gulp-less\r\n* gulp-minify-css\r\n* gulp-minify-html\r\n* gulp-ng-annotate\r\n* gulp-notify\r\n* gulp-rename\r\n* gulp-shell\r\n* gulp-uglify\r\n\r\nRead the Gulp tasks sections to find more information about it.\r\n\r\n### Why `bower install` ?\r\n\r\nInstall these Dependencies on 'www/lib' folder\r\n\r\n* angular-animate\r\n* angular-material\r\n* angular-material-icons\r\n* angular-resource\r\n* angular-route\r\n* angular-sanitize\r\n* angular-touch\r\n* angular-translate\r\n* angular-translate-loader-static-files\r\n* fastclick\r\n* ngCordova\r\n\r\n\r\n## Credits and License ##\r\n\r\nGuilherme Assemany (<http://assemany.com/>) created this!  \r\n\r\nContributors:\r\n\r\n- Guilherme Assemany (<http://assemany.com/>)\r\n- Feel free to join me! :)\r\n\r\nThis program is free software: you can redistribute it and/or modify it\r\nunder the terms of the GNU Affero General Public License as published\r\nby the Free Software Foundation.\r\n","google":"UA-57167317-4","note":"Don't delete this file! It's used internally to help with page regeneration."}